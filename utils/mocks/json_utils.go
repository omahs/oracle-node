// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// JsonUtils is an autogenerated mock type for the JsonUtils type
type JsonUtils struct {
	mock.Mock
}

// Marshal provides a mock function with given fields: v
func (_m *JsonUtils) Marshal(v interface{}) ([]byte, error) {
	ret := _m.Called(v)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(interface{}) []byte); ok {
		r0 = rf(v)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(interface{}) error); ok {
		r1 = rf(v)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Unmarshal provides a mock function with given fields: data, v
func (_m *JsonUtils) Unmarshal(data []byte, v interface{}) error {
	ret := _m.Called(data, v)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte, interface{}) error); ok {
		r0 = rf(data, v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewJsonUtils interface {
	mock.TestingT
	Cleanup(func())
}

// NewJsonUtils creates a new instance of JsonUtils. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewJsonUtils(t mockConstructorTestingTNewJsonUtils) *JsonUtils {
	mock := &JsonUtils{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
