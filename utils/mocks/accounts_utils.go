// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	ecdsa "crypto/ecdsa"

	mock "github.com/stretchr/testify/mock"
)

// AccountsUtils is an autogenerated mock type for the AccountsUtils type
type AccountsUtils struct {
	mock.Mock
}

// GetPrivateKey provides a mock function with given fields: address, password, keystorePath
func (_m *AccountsUtils) GetPrivateKey(address string, password string, keystorePath string) (*ecdsa.PrivateKey, error) {
	ret := _m.Called(address, password, keystorePath)

	var r0 *ecdsa.PrivateKey
	if rf, ok := ret.Get(0).(func(string, string, string) *ecdsa.PrivateKey); ok {
		r0 = rf(address, password, keystorePath)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ecdsa.PrivateKey)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, string) error); ok {
		r1 = rf(address, password, keystorePath)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewAccountsUtils interface {
	mock.TestingT
	Cleanup(func())
}

// NewAccountsUtils creates a new instance of AccountsUtils. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAccountsUtils(t mockConstructorTestingTNewAccountsUtils) *AccountsUtils {
	mock := &AccountsUtils{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
